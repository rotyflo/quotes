{"version":3,"sources":["components/Quote.js","actions/writeQuotesToState.js","actions/setRandomIndex.js","components/Title.js","components/App.js","reducers/index.js","store/index.js","index.js"],"names":["Quote","fetch","then","response","json","data","props","writeQuotesToState","setRandomIndex","tweet","window","open","i","this","index","text","quotes","author","id","onClick","className","sendTweet","React","Component","connect","state","dispatch","type","Title","App","WRITE_QUOTES_TO_STATE","SET_RANDOM_INDEX","defaultState","createStore","action","Object","assign","maxIndex","length","randIndex","Math","round","random","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"yNAKMA,E,uKAEL,WAAqB,IAAD,OACnBC,MAAM,+BACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACL,EAAKC,MAAMC,mBAAmBF,GAC9B,EAAKC,MAAME,sB,uBAId,SAAUC,GACTC,OAAOC,KAAP,gDAAqDF,M,oBAGtD,WAAU,IAAD,OACJG,EAAIC,KAAKP,MAAMQ,MACfC,EAAOF,KAAKP,MAAMU,OAAOJ,GAAGG,KAC5BE,EAASJ,KAAKP,MAAMU,OAAOJ,GAAGK,OAC9BR,EAAK,UAAMM,EAAN,cAAgBE,GAEzB,OACC,gCACC,mBAAGC,GAAG,QAAN,SAAc,mCAAMH,EAAN,SACd,oBAAGG,GAAG,SAAN,eAAkBD,KAClB,wBAAQE,QAAS,WAAQ,EAAKb,MAAME,kBAAoBY,UAAU,kBAAlE,uBACA,wBAAQD,QAAS,WAAQ,EAAKE,UAAUZ,IAAUW,UAAU,kBAA5D,0B,GA1BgBE,IAAMC,WAmDXC,mBAlBf,SAAyBC,GACxB,MAAO,CACNT,OAAQS,EAAMT,OACdF,MAAOW,EAAMX,UAIf,SAA4BY,GAC3B,MAAO,CACNnB,mBAAoB,SAACF,GACpBqB,EC9CY,SAAuBrB,GACrC,MAAO,CACNsB,KAJ4B,wBAK5BX,OAAQX,GD2CEE,CAAmBF,KAE7BG,eAAgB,WACfkB,EEhDK,CACNC,KAJuB,yBFwDVH,CAA6CxB,GGxD7C,SAAS4B,IACvB,OACC,iCACC,oBAAIV,GAAG,QAAP,oCCEY,SAASW,IACtB,OACE,sBAAKT,UAAU,YAAf,UACE,cAACQ,EAAD,IACA,cAAC,EAAD,O,WCTAE,EAAwB,wBACxBC,EAAmB,mBAEnBC,EAAe,CACpBhB,OAAQ,CAAC,CAACD,KAAM,aAAcE,OAAQ,KACtCH,MAAO,G,YCDOmB,eDIA,WAAqD,IAA/BR,EAA8B,uDAAtBO,EAAcE,EAAQ,uCAClE,OAAQA,EAAOP,MACd,KAAKG,EACJ,OAAOK,OAAOC,OAAO,GAAIX,EAAO,CAACT,OAAQkB,EAAOlB,SAEjD,KAAKe,EACJ,IAAIM,EAAWZ,EAAMT,OAAOsB,OACxBC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWL,GAC3C,OAAOF,OAAOC,OAAO,GAAIX,EAAO,CAACX,MAAOyB,IAEzC,QACC,OAAOd,KCf+BkB,YAAgBC,MCCzDC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dbd96f1b.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport writeQuotesToState from '../actions/writeQuotesToState';\nimport setRandomIndex from '../actions/setRandomIndex';\n\nclass Quote extends React.Component {\n\t// Get quote on page load\n\tcomponentDidMount() {\n\t\tfetch('https://type.fit/api/quotes')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.props.writeQuotesToState(data);\n\t\t\t\tthis.props.setRandomIndex();\n\t\t\t});\n\t}\n\n\tsendTweet(tweet) {\n\t\twindow.open(`https://twitter.com/intent/tweet?text=${tweet}`);\n\t}\n\n\trender() {\n\t\tlet i = this.props.index;\n\t\tlet text = this.props.quotes[i].text;\n\t\tlet author = this.props.quotes[i].author;\n\t\tlet tweet = `${text} - ${author}`;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p id=\"quote\"><em>\"{text}\"</em></p>\n\t\t\t\t<p id=\"author\">- {author}</p>\n\t\t\t\t<button onClick={() => { this.props.setRandomIndex() }} className=\"btn btn-default\">Get Quote</button>\n\t\t\t\t<button onClick={() => { this.sendTweet(tweet) }} className=\"btn btn-primary\">Tweet</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// connect to store\nfunction mapStateToProps(state) {\n\treturn {\n\t\tquotes: state.quotes,\n\t\tindex: state.index\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\twriteQuotesToState: (data) => {\n\t\t\tdispatch(writeQuotesToState(data));\n\t\t},\n\t\tsetRandomIndex: () => {\n\t\t\tdispatch(setRandomIndex());\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quote);\n","const WRITE_QUOTES_TO_STATE = 'WRITE_QUOTES_TO_STATE';\n\nexport default function completeFetch(data) {\n\treturn {\n\t\ttype: WRITE_QUOTES_TO_STATE,\n\t\tquotes: data\n\t};\n};","const SET_RANDOM_INDEX = 'SET_RANDOM_INDEX';\n\nexport default function setRandomIndex() {\n\treturn {\n\t\ttype: SET_RANDOM_INDEX\n\t}\n}","export default function Title() {\n\treturn (\n\t\t<header>\n\t\t\t<h1 id=\"title\">Random Quote Machine</h1>\n\t\t</header>\n\t);\n}","import React from 'react';\nimport './App.css';\nimport Quote from './Quote';\nimport Title from './Title';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <Title />\n      <Quote />\n    </div>\n  );\n}","const WRITE_QUOTES_TO_STATE = 'WRITE_QUOTES_TO_STATE';\nconst SET_RANDOM_INDEX = 'SET_RANDOM_INDEX';\n\nconst defaultState = {\n\tquotes: [{text: 'loading...', author: ''}],\n\tindex: 0\n}\n\nexport default function quoteReducer(state = defaultState, action) {\n\tswitch (action.type) {\n\t\tcase WRITE_QUOTES_TO_STATE:\n\t\t\treturn Object.assign({}, state, {quotes: action.quotes});\n\n\t\tcase SET_RANDOM_INDEX:\n\t\t\tlet maxIndex = state.quotes.length;\n\t\t\tlet randIndex = Math.round(Math.random() * maxIndex);\n\t\t\treturn Object.assign({}, state, {index: randIndex});\n\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};","import { createStore, applyMiddleware } from 'redux';\nimport quoteReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nexport default createStore(quoteReducer, applyMiddleware(thunk));","import ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}